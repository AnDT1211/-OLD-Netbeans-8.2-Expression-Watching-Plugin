/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package WatchVarUT;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.InputStreamReader;
import java.util.Map;
import java.util.TreeMap;
import java.util.function.BiConsumer;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.apache.commons.lang.StringUtils;
import org.netbeans.api.debugger.DebuggerManager;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import org.openide.windows.WindowManager;

/**
 * Top component which displays something.
 */
//@ConvertAsProperties(
//        dtd = "-//WatchVarUT//WatchingManager//EN",
//        autostore = false
//)
//@TopComponent.Description(
//        preferredID = "WatchingManagerTopComponent",
//        //iconBase="SET/PATH/TO/ICON/HERE",
//        persistenceType = TopComponent.PERSISTENCE_ALWAYS
//)
//@TopComponent.Registration(mode = "output", openAtStartup = true)
//@ActionID(category = "Window", id = "WatchVarUT.WatchingManagerTopComponent")
//@ActionReference(path = "Menu/Window" /*, position = 333 */)
//@TopComponent.OpenActionRegistration(
//        displayName = "#CTL_WatchingManagerAction",
//        preferredID = "WatchingManagerTopComponent"
//)
//@Messages({
//    "CTL_WatchingManagerAction=WatchingManager",
//    "CTL_WatchingManagerTopComponent=WatchingManager",
//    "HINT_WatchingManagerTopComponent=This is a WatchingManager window"
//})
public final class WatchingManagerTopComponent extends TopComponent {

    public WatchingManagerTopComponent() {
        initComponents();
//        setName(Bundle.CTL_WatchingManagerTopComponent());
//        setToolTipText(Bundle.HINT_WatchingManagerTopComponent());

    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextArea1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTextArea1);

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText(org.openide.util.NbBundle.getMessage(WatchingManagerTopComponent.class, "WatchingManagerTopComponent.jTextField1.text")); // NOI18N
        jTextField1.setBorder(null);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 861, Short.MAX_VALUE)
                    .addComponent(jTextField1)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1))
        );

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 0, 102));
        org.openide.awt.Mnemonics.setLocalizedText(jButton1, org.openide.util.NbBundle.getMessage(WatchingManagerTopComponent.class, "WatchingManagerTopComponent.jButton1.text")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jButton2, org.openide.util.NbBundle.getMessage(WatchingManagerTopComponent.class, "WatchingManagerTopComponent.jButton2.text")); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jButton3, org.openide.util.NbBundle.getMessage(WatchingManagerTopComponent.class, "WatchingManagerTopComponent.jButton3.text")); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jButton4, org.openide.util.NbBundle.getMessage(WatchingManagerTopComponent.class, "WatchingManagerTopComponent.jButton4.text")); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(WatchingManagerTopComponent.class, "WatchingManagerTopComponent.jLabel1.text")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents









    private File saveFile = null;
    private Map<String, String> map = new TreeMap<>();
    private String utName = "";

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        // Set Watches Button

        SetWatches();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void SetWatches() {
        String[] watches = jTextArea1.getText().split("\n");

        DebuggerManager debug = DebuggerManager.getDebuggerManager();
        debug.removeAllWatches();

        for(String watch : watches) {
            if(StringUtils.isNotBlank(watch)) {
                debug.createWatch(watch);
            }
        }
    }
    
    private static final String div = "~~";
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        // Save Button

        if (saveFile == null) {
            JFileChooser fileChooser = new JFileChooser();
            if(fileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
                saveFile = fileChooser.getSelectedFile();
                jLabel1.setText(saveFile.getName());

                if (!saveFile.exists()) {
                    try {
                        saveFile.createNewFile();
                    } catch (Exception e) {
                        System.out.println(e);
                    }
                }

            }
        }

        if (saveFile == null) {
            // dialog
            return;
        }
        String utsString = getAllContentFromFile(saveFile);
        String[] uts = utsString.split("\n" + div);
        map = new TreeMap<>();
        for(String ut : uts) {
            String header = ut.split("\n")[0];
            String remain = StringUtils.right(ut, ut.length() - header.length() - 1);
            if(StringUtils.isBlank(header)) {
                continue;
            }
            map.put(header, remain);
        }

        String utNumber = (String) JOptionPane.showInputDialog(null, "Format: \"UT{XXX-XX}\" (UT001-01}", "Enter TestCase Number", JOptionPane.PLAIN_MESSAGE);
        // neu bam cancel
        if(utNumber == null) {
            return;
        }

        map.put(utNumber, jTextArea1.getText());
        jTextField1.setText(utNumber);

        final StringBuilder sbContent = new StringBuilder();
        map.forEach(new BiConsumer<String, String>() {
            @Override
            public void accept(String t, String u) {
                sbContent.append(div).append(t).append("\n").append(u).append("\n");
            }
        });

        sbContent.delete(0, 2);

        try (BufferedWriter bw = new BufferedWriter(new FileWriter(saveFile))) {
            bw.write(sbContent.toString());
        } catch (Exception e) {
            System.out.println(e);
        }


    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        // Open Button

        if(saveFile == null || StringUtils.isBlank(jLabel1.getText())) {
            JFileChooser fileChooser = new JFileChooser();
            int result = fileChooser.showOpenDialog(this);
            if(result == JFileChooser.APPROVE_OPTION) {
                jLabel1.setText(fileChooser.getSelectedFile().getName());
                saveFile = fileChooser.getSelectedFile();
            } else {
                return;
            }
        }

        String utsString = getAllContentFromFile(saveFile);
        String[] uts = utsString.split("\n" + div);
        map = new TreeMap<>();
        for(String ut : uts) {
            String header = ut.split("\n")[0];
            String remain = StringUtils.right(ut, ut.length() - header.length() - 1);
            map.put(header, remain);
        }

        String inputUT = (String) JOptionPane.showInputDialog(null, "Choose Testcase", "TestCase Select", JOptionPane.QUESTION_MESSAGE, null
                , map.keySet().toArray(), StringUtils.isNotBlank(jTextField1.getText()) ? jTextField1.getText() : null);
        // neu bam cancel
        if(inputUT == null) {
            return;
        }
        jTextField1.setText(inputUT);
        String watchesAccordingToUT = map.get(inputUT) == null ? "" : map.get(inputUT);
        jTextArea1.setText(watchesAccordingToUT);

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        // Reset Button

        jLabel1.setText("file.txt");
        saveFile = null;
        map = null;
        utName = "";
        jTextField1.setText("UTXXX-XX");



    }//GEN-LAST:event_jButton4ActionPerformed

    private int prevKeyCode = 0;
    private void jTextArea1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextArea1KeyPressed
        // TODO add your handling code here:
        // key event ctr + ENTER
        if(evt == null) {
            return;
        }
        if(prevKeyCode == 17 && evt.getKeyCode() == 10) {
            SetWatches();;
        }
        prevKeyCode = evt.getKeyCode();
    }//GEN-LAST:event_jTextArea1KeyPressed

    private static String getAllContentFromFile(File saveFile) {
        StringBuilder watchesLine = new StringBuilder();
        try (FileInputStream fis = new FileInputStream(saveFile);
                BufferedReader br = new BufferedReader(new InputStreamReader(fis))) {

            String line = br.readLine();
            while (line != null) {
                watchesLine.append(line).append("\n");
                line = br.readLine();
            }

        } catch (Exception e) {
            System.out.println(e);
        }

        return watchesLine.toString();
    }




    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
